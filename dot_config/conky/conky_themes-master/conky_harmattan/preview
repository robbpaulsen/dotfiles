#!/usr/bin/env /bash

NORMAL='\033[0m'
RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'
LRED='\033[01;31m'
LGREEN='\033[01;32m'
LYELLOW='\033[01;33m'
LBLUE='\033[01;34m'
LPURPLE='\033[01;35m'
LCYAN='\033[01;36m'
WHITE='\033[01;37m'
UNDERLINE='\033[04m'

# Set extglob flag for regexes
shopt -s extglob

## Functions

# Signal setup to restore config if required
function ctrl_c() {
	echo -e "\n\n${YELLOW}[!]${NORMAL}${LIGHTGRAY} Saliendo...${NORMAL}\n"
	exit 1
}
trap ctrl_c INT

function update() {
	echo ''
	newTheme="${themePaths[$xindex]}/${sizes[$yindex]}/${modes[$mindex]}/.conkyrc"

	shortTheme=$(basename "${themePaths[$xindex]}")
	echo "switching to $shortTheme,${sizes[$yindex]},${modes[$mindex]}"
	if [ ! -f "$newTheme" ]; then
		newTheme="${themePaths[$xindex]}/${sizes[$yindex]}/.conkyrc"
		if [ ! -f "$newTheme" ]; then
			echo "couldn't find .conkyrc file for this combination"
			return
		fi
	fi
	cp "$newTheme" ~/.conkyrc
}

function install() {
	while true; do
		read -rp "Enter your OpenWeatherMap API key:" apiKey
		if [[ ! $apiKey =~ ^[a-zA-Z0-9]+$ ]]; then
			echo 'API key must be only alphanumeric characters.'
		else
			break
		fi
	done

	while true; do
		read -rp "Enter your OpenWeatherMap Location ID:" locationID
		if [[ ! $locationID =~ ^[0-9]+$ ]]; then
			echo 'Location ID must be a number.'
		else
			break
		fi
	done

	while true; do
		read -rp "Choose unit type ('celsius', 'kelvin' or 'fahrenheit'): " unitType
		if [[ ! "celsius kelvin fahrenheit" =~ ${unitType} ]]; then
			echo "Spelling error. Options are: 'celsius', 'kelvin' or 'fahrenheit'."
		else
			break
		fi
	done

	apiString="template6=\"$apiKey\","
	locationString="template7=\"$locationID\","
	unitString="template8=\"${unitMap[$unitType]}\","
	sed -i "s/^template6=.*/$apiString/" ~/.conkyrc | grep template6
	sed -i "s/^template7=.*/$locationString/" ~/.conkyrc | grep template7
	sed -i "s/^template8=.*/$unitString/" ~/.conkyrc | grep template8
	echo 'config updated'
}

function revert() {
	echo ''
	if $revertToggle; then
		echo 'reverting config'
		cp ~/".conkyrc-$dateString" ~/.conkyrc
	else
		echo 'no config to revert to'
	fi
	return
}

function helpText() {
	echo ''
	echo "Press h/l to scroll through themes."
	echo "Press j/k to scroll through formats."
	echo "Press n/m to scroll through modes."
	echo "Press i to install and add API key/location info."
	echo "Press r to revert to your backed-up .conkyrc"
	echo "Press q or ctrl-c to quit."
}

#### VARIABLES ####

# Build theme array
declare -a themePaths
for theme in $(find ~/.conky/conky_themes-master/conky_harmattan/.harmattan-themes -mindepth 1 -maxdepth 1 -type d | sort); do
	themePaths+=("$theme")
done

declare -A unitMap=(
	['kelvin']='default'
	['celsius']='metric'
	['fahrenheit']='imperial'
)
dateString=$(date +%s)
revertToggle=false
sizes=('God-Mode' 'Comfortable' 'Compact' 'Mini')
modes=('normal-mode' 'photo-mode')
xindex=0
yindex=0
mindex=0
xmax=${#themePaths[@]}
ymax=${#sizes[@]}
mmax=${#modes[@]}

#### SETUP ####
# Install the assets
if [ ! -d ~/.harmattan-assets/ ]; then
	echo 'Installing assets'
	cp -r .harmattan-assets ~/
fi

# Backup existing conky file
if [ ! -f ~/.conkyrc ]; then
	echo 'No config file found, using first theme to start with.'
	cp .harmattan-themes/Brown-Card/God-Mode/normal-mode/.conkyrc ~/
else
	echo "Conky file found, backing up to ~/.conkyrc-$dateString"
	cp ~/.conkyrc ~/".conkyrc-$dateString"
	revertToggle=true
fi

# Check for process
PID=$(ps -ef | grep [c]onky | awk {'print $2'})
if [ -z "$PID" ]; then
	echo 'Conky not running, starting it'
	conky -q
fi

#### MAIN ####
helpText
while true; do
	read -rn1 -p ':> ' key
	case $key in
	h)
		xindex=$(((xindex + 1) % xmax))
		;;
	l)
		xindex=$(((xindex - 1) % xmax))
		;;
	j)
		yindex=$(((yindex + 1) % ymax))
		;;
	k)
		yindex=$(((yindex - 1) % ymax))
		;;
	m)
		mindex=$(((mindex - 1) % mmax))
		;;
	n)
		mindex=$(((mindex + 1) % mmax))
		;;
	i)
		install
		continue
		;;
	r)
		revert
		continue
		;;
	q)
		ctrl_c
		;;
	*)
		helpText
		continue
		;;
	esac
	update $xindex $yindex $mindex
done
