-- This is an example configuration for Conky using the Corky Lua
-- modules. Requires Conky version >=1.10. For an example using the
-- old (pre-1.10) configuration style please check the Git history.

-- The following is the regular Conky configuration. See the official
-- documentation for details.

conky.config            = {

   default_color        = "cccccc";
   cpu_avg_samples      = 2;
   double_buffer        = true;
   minimum_width        = 450;
   minimum_height       = 300;
   own_window           = true;
   update_interval      = 1;
   font                 = "DejaVu Sans Mono:size=9";
   use_xft              = true;

   lua_load             = "lua/corky.lua";
   lua_startup_hook     = "startup_hook";
   lua_shutdown_hook    = "shutdown_hook";
   lua_draw_hook_pre    = "draw_hook_pre";
   lua_draw_hook_post   = "draw_hook_post";

};

--[[

   This is the Corky configuration. It is included in a Lua multiline
   comment, and still using the old syntax. I currently don't see any
   reason to change this to proper Lua, for the time being this will
   be the way Corky is configured. Only lines starting with #: will be
   processed by Corky.

   #: include, corky.cache
   #: include, corky.colors
   #: include, corky.circles
   #: include, corky.dcolors
   #: include, corky.lists
   #: include, corky.rects
   #: include, corky.text

   #: color,  background, 0x444444
   #: color,  fixed,      0xECECEC
   #: dcolor, dynamic,    0x00FF00, 50, 0xFFFF00, 95, 0xFF0000
   #: dcolor, gradient,   0x00FF00, 50, 0xFFFF00,     0xFF0000

   #: cache, ${cpu},      1, 0, 100
   #: cache, ${cpu cpu1}, 1, 0, 100
   #: cache, ${cpu cpu2}, 1, 0, 100

   #: list, font, DejaVu Sans Mono, FONT_SLANT_NORMAL, FONT_WEIGHT_BOLD
   #: list, scale10, 10, 20, 30, 40, 50, 60, 70, 80, 90
   #: list, scale25, 25, 50, 75

   #: text, cpu,   5, 80, font, 12, fixed,    CPU (Total): %4s%%, ${cpu}
   #: text, cpu, 166, 80, font, 12, dynamic,  CPU (Total): %4s%%, ${cpu}
   #: text, cpu, 327, 80, font, 12, gradient, CPU (Total): %4s%%, ${cpu}

   #: circle, cpu, ${cpu},  40, 115, 20, 6, 135,  270, fixed,    background, scale10, 0x000000
   #: circle, cpu, ${cpu}, 201, 115, 20, 6, 315, -270, dynamic,  background, scale10, 0x000000
   #: circle, cpu, ${cpu}, 362, 115, 20, 6, 315,  270, gradient, background, scale10, 0x000000

   #: rect, cpu, ${cpu},  75, 100, 70, 6, 0,   fixed,    background, scale25, 0x000000
   #: rect, cpu, ${cpu}, 140, 135, 70, 6, 195, fixed,    background, scale25, 0x000000
   #: rect, cpu, ${cpu}, 236, 100, 70, 6, 0,   dynamic,  background, scale25, 0x000000
   #: rect, cpu, ${cpu}, 301, 135, 70, 6, 195, dynamic,  background, scale25, 0x000000
   #: rect, cpu, ${cpu}, 397, 100, 70, 6, 0,   gradient, background, scale25, 0x000000
   #: rect, cpu, ${cpu}, 462, 135, 70, 6, 195, gradient, background, scale25, 0x000000

   #: circle, cpu, ${cpu cpu1},  40, 230,  20, 6, 180, 90, fixed, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu1},  40, 210, 100, 6,   0,     fixed, background, , , 20, 100
   #: circle, cpu, ${cpu cpu2}, 120, 240,  20, 6,   0, 90, fixed, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu2}, 120, 260, 100, 6, 180,     fixed, background, , , 20, 100

   #: text, cpu, 30, 230, font, 12, fixed, %4s%%, ${cpu cpu1}
   #: text, cpu, 80, 250, font, 12, fixed, %4s%%, ${cpu cpu2}

   #: circle, cpu, ${cpu cpu1}, 201, 230,  20, 6, 180, 90, dynamic, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu1}, 201, 210, 100, 6,   0,     dynamic, background, , , 20, 100
   #: circle, cpu, ${cpu cpu2}, 281, 240,  20, 6,   0, 90, dynamic, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu2}, 281, 260, 100, 6, 180,     dynamic, background, , , 20, 100

   #: text, cpu, 191, 230, font, 12, dynamic, %4s%%, ${cpu cpu1}
   #: text, cpu, 241, 250, font, 12, dynamic, %4s%%, ${cpu cpu2}

   #: circle, cpu, ${cpu cpu1}, 362, 230,  20, 6, 180, 90, gradient, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu1}, 362, 210, 100, 6,   0,     gradient, background, , , 20, 100
   #: circle, cpu, ${cpu cpu2}, 442, 240,  20, 6,   0, 90, gradient, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu2}, 442, 260, 100, 6, 180,     gradient, background, , , 20, 100

   #: text, cpu, 352, 230, font, 12, gradient, %4s%%, ${cpu cpu1}
   #: text, cpu, 402, 250, font, 12, gradient, %4s%%, ${cpu cpu2}

--]]

-- The following is Conky's output. Actual meters are drawn by Corky.

conky.text = [[
This is a Conky/Corky example configuration.

Fixed colors:          Dynamic colors:        Gradient colors:
====================== ====================== ======================







====================== ====================== ======================

                             CPU 1 & 2







====================================================================

Note: Depending on your system configuration and/or display settings
the text drawn by Conky (grey text like this) and the stuff drawn by
Corky (using Cairo, all bold text and the meters) may not be aligned
properly. You will have to adjust the position manually.
]]